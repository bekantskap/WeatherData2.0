// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherData2._0;

namespace WeatherData2._0.Migrations
{
    [DbContext(typeof(WeatherDbContext))]
    [Migration("20210223221119_UpdateTemperatures")]
    partial class UpdateTemperatures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherData2._0.Models.Enviornment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<string>("InsideOrOutside")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Enviornments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2021, 2, 23, 23, 11, 18, 109, DateTimeKind.Local).AddTicks(6813),
                            Humidity = 60,
                            InsideOrOutside = "Outside",
                            Temperature = -3f
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2021, 2, 23, 23, 11, 18, 122, DateTimeKind.Local).AddTicks(498),
                            Humidity = 20,
                            InsideOrOutside = "Inside",
                            Temperature = 25.2f
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2021, 2, 23, 23, 11, 18, 122, DateTimeKind.Local).AddTicks(629),
                            Humidity = 80,
                            InsideOrOutside = "Outside",
                            Temperature = 2f
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2021, 2, 23, 23, 11, 18, 122, DateTimeKind.Local).AddTicks(729),
                            Humidity = 18,
                            InsideOrOutside = "Inside",
                            Temperature = 28.1f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
